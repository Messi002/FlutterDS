-bloc : Core bloc library
-flutter_bloc: Powerful flutter widgets built to work with bloc in
order to build fast, reactive mobile applications

Why Bloc?
Bloc makes it easy to separate presentation from 
business logic, making your code fast, easy to test, and reusable.

Bloc was designed with three core values in mind;
-Simple: Easy to understand and can be used by developers with varying skill levels
- Powerful: Help make amazing, complex applications by composing them of smaller components.
-Testable: Easily test every aspect of an application so that we can iterate with confidence.

Overall, Bloc attempts to make state chagnes predicatable by 
regulating when a state change can occur and enforcing a single way to change state throughout an 
entire application.

Streams:-
*A stream is a sequence of asynchronous data.
We can create a Stream in Dart by writing an async* (async generator) function.

Cubit:-
A cubit is a class which extends blocBase and can be extended to manage any type of state.

When creating a cubit, we need to define the type of state which the cubit will be managing and 
specify the initial state of the cubit.
Each cubit has the ability to output a new state via emit.

BlocObserver:-

                        //BLOC

A bloc is a more advanced class which relies on events to trigger state chagnes
rather than functions. Bloc as well as cubit extend BlocBase.
However rather than calling a function on a Bloc and directly emitting a new state, Blocs
receive events and convert the incoming events into outgoing states.